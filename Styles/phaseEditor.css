div.popUpBase>menu>section.popUpContentContainer:has(>.phaseEditor){
    background-color: transparent;
    
}
div.popUpBase>menu:has( .phaseEditor)>section.popUpContentContainer{
    width:100%;
    
}
div.popUpBase>menu:has( .phaseEditor){
    width:100%;
    
}
div.popUpBase>menu:has( .phaseEditor)>section.popUpControlContainer{
    display: none;
    
}
.phaseEditor{
    display:grid;
    width:min(750px,100%);
    max-height:100%;
    min-width:350px;
    grid-template-columns: repeat(auto-fill,375px);
    grid-template-rows: auto 1fr auto;
    position:relative;
    justify-items: center;
    justify-content: center;
}
.phaseEditor>.inputContainers{
    box-sizing: content-box;
    display:grid;
    justify-items:left;
    grid-template-columns: repeat(auto-fill,350px);
    grid-row:2;
    grid-column: 1 / -1;
    overflow-y:auto;
    overflow-x:hidden;
    max-width: 725px;
    width:100%;
}
.phaseEditor>.inputContainers .inputContainer{
   width:100%;
   margin:0;
   padding:0.3em;
}
.phaseEditor>.formControls{
   grid-row:3;
   grid-column: 1/-1;
   background-color:rgba(0, 0, 139, 0.517);
   width:100%;
    padding:8px 4px 4px;
    
   
}
.phaseEditor>.formControls>.formButtonContainer{
    display:flex;
    flex-direction: row;
    justify-content: space-around;
    width:100%;   
}
.phaseEditor>h1{
   justify-self: center;
   text-align: center;
   grid-column: 1/-1;
}
.phaseEditor:after{
    position:absolute;
    background-color: rgb(49, 111, 217);
    z-index: -1;
    grid-row: 1/-1;
    grid-column: 1/-1;
    width:100%;
    height:100%;
    content:"";
}


.phaseEditor .inputContainer[data-object-field='priority'] input{
   width:30px;
}
.phaseEditor .inputContainer[data-object-field='gameStages'] {
    display:flex;
    flex-direction: column;
    row-gap: 0.7em;
 }
.phaseEditor .inputContainer[data-object-field='gameStages']:before{
   content:"Game Stages";
   font-weight: 600;
}
.phaseEditor .inputContainer[data-object-field='gameStages']>button{
   width:60%;
   align-self:center;
}
.phaseEditor .inputContainer[data-object-field='gameStages'] .stackableInputContainer {
   position:relative;
}
.phaseEditor .inputContainer[data-object-field='gameStages'] .stackableInputContainer section.inputContainers{
   display:flex;
   flex-wrap:wrap;
   /* background-color: red; */
}
.phaseEditor .inputContainer[data-object-field='gameStages'] .stackableInputContainer section.inputContainers .inputContainer{
   width:max-content;
}
.phaseEditor .inputContainer[data-object-field='gameStages'] .stackableInputContainer button{
   position:absolute;
   top:0.7em;
   right:1em;
}
.phaseEditor .inputContainer[data-object-field='gameStages'] :is(.inputContainer[data-object-field='lengthMin'],.inputContainer[data-object-field='lengthSec']) input{
   width:4em;
}
.phaseEditor .inputContainer[data-object-field='gameStages'] :is(.inputContainer[data-object-field='label']) input{
   width:12em;
}